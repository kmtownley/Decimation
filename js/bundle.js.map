{"version":3,"sources":["webpack:///webpack/bootstrap 9ea13ddcaa369cdde6f0","webpack:///./lib/words.js","webpack:///./lib/blossom.js","webpack:///./lib/decimation.js","webpack:///./lib/explosion.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;;;;AAIA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACtFA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,UAAU;AACxD;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AC5IA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC;;;;;;;ACvED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9ea13ddcaa369cdde6f0","WORDS = {\n  \"One Tenth\": 0.1,\n  \"Two Tenths\": 0.2,\n  \"Three Tenths\": 0.3,\n  \"Four Tenths\": 0.4,\n  \"Five Tenths\": 0.5,\n  \"Six Tenths\": 0.6,\n  \"Eight Tenths\": 0.8,\n  \"Nine Tenths\": 0.9,\n  \"One Hundredth\": 0.01,\n  \"Two Hundredths\": 0.02,\n  \"Three hundredths\": 0.03,\n  \"Four hundredths\": 0.04,\n  \"Five hundredths\": 0.05,\n  \"Sixe hundredths\": 0.06,\n  \"Eleven Hundredths\": 0.11,\n  \"Sixteen Hundredths\": 0.16,\n  \"Seventeen Hundredths\": 0.017,\n  \"One an One Tenth\": 1.1,\n  \"Three and Four Tenths\": 3.4,\n  \"Zero and Three Hundredths\": 0.03,\n  \"One Thousandth\": 0.001,\n  \"Eleven Thousandths\": 0.011,\n  \"Forty-One Hundreths\": 0.41,\n  \"One and Fourteen Hundredths\": 1.14,\n  \"Eighty-One Thousandths\": 0.81,\n  \"Eighteen Hundredths\": 0.18,\n  \"Ninety-Nine Thousandths\": 0.099,\n  \"Three Hundred and Fifteen Thousandths\": 0.315\n};\n\nlet DISPLAYED_WORD = null;\n\nclass Word {\n  constructor() {\n    this.wordValue = this.createWord();\n    this.decimalValue = this.createDecimal(this.wordValue);\n    this.match = null;\n    this.display = false;\n    \n\n  }\n\n  createWord() {\n    let keys = Object.keys(WORDS);\n    let length = keys.length;\n    let rnd = Math.floor(Math.random()*length);\n    let key = keys[rnd];\n    return key;\n    // console.log(WORDS[key]);\n    // return WORDS[key];\n  }\n\n  createDecimal(key) {\n\n    // let keys = Object.keys(WORDS);\n    // let length = keys.length;\n    // let rnd = Math.floor(Math.random()*length);\n    // let key = keys[rnd];\n    return WORDS[key];\n  }\n\n  renderWordChoice(wordArray) {\n    let displayed;\n\n    let word = wordArray[Math.floor(Math.random() * wordArray.length)];\n    console.log(word, wordArray);\n\n    if (wordArray.length === 0) {\n        document.querySelector(\".words\").innerHTML = \"Let's Do This\";\n    } else {\n        document.querySelector(\".words\").innerHTML = word;\n        DISPLAYED_WORD = word;\n        console.log(word);\n      // });\n    }\n  }\n\n\n\n  isMatch(wordVal) {\n    return (wordVal === DISPLAYED_WORD ? true : false);\n\n  }\n}\n\nmodule.exports = Word;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/words.js\n// module id = 0\n// module chunks = 0","// BLOSSOM = new Image();\n// BLOSSOM.src = \"./assets/images/whole_blossom.png\";\nconst Word = require(\"./words\");\nconst Explosion = require(\"./explosion\");\n\n\nclass Blossom {\n  constructor(x, y, numBlosssoms, ctx3, ctx) {\n    this.x = x;\n    this.y = Math.random() * 400 + 6;\n    this.drawnBlossoms = [];\n    this.visibleBlossoms = [];\n    this.ctx3 = ctx3;\n    this.ctx = ctx;\n    this.blossomExploded = false;\n    this.renderBlossom = this.renderBlossom.bind(this);\n    this.value = new Word();\n    this.decimalValue = this.value.decimalValue;\n    this.wordValue = this.value.wordValue;\n\n  }\n\n  draw(ctx) {\n    let increments = [1, 2];\n    let dx = 1.1;\n    let dy = 0.9;\n    this.blossom = new Image();\n    this.blossom.src = './assets/images/whole_blossom.png';\n    this.blossom.onload = function() {\n    };\n    if (this.blossomExlpoded === true) {\n\n      this.blossom = ctx.createImageData(128, 128);\n        for (let i = this.blossom.data.length; --i >= 0; )\n          this.blossom.data[i] = 0;\n          ctx.putImageData(this.blossom, this.x, this.y);\n      }\n\n    ctx.drawImage(this.blossom, this.x, this.y, 125, 125 );\n    ctx.font=\"24px Varela Round\";\n    ctx.fillText(this.decimalValue, this.x + 37, this.y + 73);\n\n\n    const animateCallback = () => {\n      if (this.explodedBlossom !== true) {\n        if (this.x <= Math.random() * 320 + 3  && this.y < Math.random() * 600 + 4) {\n          this.x += dx;\n          this.y += dy;\n          this.renderBlossom(ctx);\n        } else if (this.x < 400) {\n           this.x += dx;\n           this.y -= dy;\n           this.renderBlossom(ctx);\n         } else if (this.x < 730) {\n           this.x += dx;\n           this.y += dy;\n           this.renderBlossom(ctx);\n         } else if (this.x <= 999) {\n           this.x += dx;\n           this.y -= dy;\n           this.renderBlossom(ctx);\n         } else {\n\n           return null;\n         }\n       }\n    };\n    window.requestAnimationFrame(animateCallback);\n   }\n\n   renderBlossom() {\n     if (this.blossomExploded === true) {\n       this.blossom = this.ctx.createImageData(128, 128);\n         for (let i = this.blossom.data.length; --i >= 0; )\n           this.blossom.data[i] = 0;\n           // this.ctx.putImageData(this.blossom, this.x, this.y);\n       } else {\n       this.draw(this.ctx);\n     }\n   }\n   // findVisibleBlossoms() {\n   //   this.drawnBlossoms.forEach(blossom => {\n   //     if (blossom.x > 0) {\n   //       this.visibleBlossoms.push(blossom);\n   //     }\n   //   });\n   //   return this.visibleBlossoms;\n   // }\n\n\n   collisionDetected(blossom, nextBlossom) {\n     this.findVisibleBlossoms();\n       if (this.visibleBlossoms !== undefined) {\n       this.visibleBlossoms.forEach((blossom, idx) => {\n         let nextBlossom = this.vissibleBlossoms[idx + 1];\n         if (blossom.x > nextBlossom.x) {\n           return true;\n         }\n       });\n     }\n   }\n\n   moveRandom(maxY) {\n     let dy = (Math.random() * 2) - 1;\n     this.y = Math.abs((this.y + (dy * 25) * 0.1) % 300);\n   }\n\n   explodeBlossom() {\n     let explosion = new Explosion(this.x, this.y, this.ctx3);\n     explosion.drawSprite();\n   }\n\n   findVisibleBlossoms() {\n    if (this.x > 0 && this.x < 1000) {\n      this.visibleBlossoms.push(this);\n    }\n\n  }\n\n\n   removeBlossom() {\n\n     delete this;\n   }\n\n}\n\nBlossom.randomBlossom = (maxX, maxY, numBlossoms, ctx3, ctx) => {\n  let blossom = new Image();\n  blossom.src = \"./assets/images/whole_blossom.png\";\n  return new Blossom(\n    maxX * Math.random(),\n    maxY * Math.random(),\n    numBlossoms += 1,\n    ctx3,\n    ctx\n  );\n};\n\n\nmodule.exports = Blossom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blossom.js\n// module id = 1\n// module chunks = 0","const Blossom = require(\"./blossom\");\nconst Game = require('./game');\nconst Words = require('./words');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let canvasEl = document.getElementById(\"myCanvas\");\n  canvasEl.width = 1000;\n  canvasEl.height = 500;\n  canvasLeft = canvasEl.offsetLeft;\n  canvasTop = canvasEl.offsetTop;\n\n  let ctx = canvasEl.getContext(\"2d\");\n  ctx.fillStyle = \"#ffffff\";\n  ctx.fillRect(0, 0, canvasEl.width, canvasEl.height);\n\n  let canvasWords = document.getElementById(\"canvasWords\");\n  canvasWords.width = 80;\n  canvasWords.height = 80;\n  let ctxWords = document.getElementById(\"canvasWords\");\n\n  let clickyEl = document.querySelector(\".clicky\");\n  clickyEl.addEventListener(\"click\", (e) => {\n    let x = e.pageX - canvasLeft;\n    let y = e.pageY - canvasTop;\n    game.receiveMouseXY(x, y);\n  });\n\n  let modal = document.getElementById('myModal');\n  // Get the button that opens the modal\n  let btn = document.getElementById(\"myBtn\");\n  // Get the <span> element that closes the modal\n  let span = document.getElementsByClassName(\"close\")[0];\n\n  // When the user clicks on the button, open the modal\n  btn.onclick = function() {\n      modal.style.display = \"block\";\n  };\n  // When the user clicks on <span> (x), close the modal\n  span.onclick = function() {\n      modal.style.display = \"none\";\n  };\n  // When the user clicks anywhere outside of the modal, close it\n  window.onclick = function(event) {\n      if (event.target == modal) {\n          modal.style.display = \"none\";\n      }\n  };\n\n  let backgroundEl = document.getElementById(\"canvasBackground\");\n  backgroundEl.height = 100;\n  backgroundEl.width = 300;\n\n  let ctx2 = canvasEl.getContext(\"2d\");\n\n  let explosionEl = document.getElementById(\"canvasExplosion\");\n  explosionEl.height = 128;\n  explosionEl.width = 128;\n\n  let ctx3 = explosionEl.getContext(\"2d\");\n\n  const game = new Game(ctx, ctx2, ctx3, ctxWords);\n\n\n  game.beginBackground(ctx2);\n  game.start(ctx, ctx3);\n\n  let pauseButton = document.getElementById(\"pause\");\n  pauseButton.addEventListener(\"click\", () =>  game.togglePause());\n\n  // window.Blossom = Blossom;\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/decimation.js\n// module id = 2\n// module chunks = 0","class Explosion {\n  constructor(x, y, ctx3) {\n    this.animateCallback = this.animateCallback.bind(this);\n\n    this.ctx3 = ctx3;\n    this.start = Date.now();\n    this.frame = 0;\n    this.blossomX = x;\n    this.blossomY = y;\n  }\n\n\n  animateCallback(ctx3) {\n\n    return () => {\n      // this.ctx3.clearRect(this.blossomX, this.blossomY, 30, 70);\n      // ctx3.drawImage(this.explodeImage, this.explodeImage.startPos, 128, 128, 128, 0, 0, 128, 128);\n      //\n      // this.explodeImage.startPos += 128;\n      // window.requestAnimationFrame(this.animateCallback(ctx3).bind(this));\n      this.ctx3.drawImage(this.explodeImage, this.explodeImage.startPosX, this.explodeImage.startPosY, 128, 128, this.blossomX / 9.2, this.blossomY / 5.9, 30, 70);\n      this.explodeImage.startPosX += 128;\n\n      if (this.explodeImage.startPosX >= 1024 & this.explodeImage.count <= 4) {\n        this.explodeImage.startPosX = 0;\n        this.explodeImage.startPosY += 128;\n        this.explodeImage.count += 1;\n\n      }\n\n      if (Date.now() - this.start < 8000) {\n      window.requestAnimationFrame(this.animateCallback(this.ctx3).bind(this));\n      }\n    };\n  }\n\n  animate(ctx3) {\n\n    window.requestAnimationFrame(this.animateCallback(this.ctx3).bind(this));\n  }\n\n  drawSprite() {\n    this.explodeImage = new Image();\n    this.explodeImage.src = \"./assets/images/explosion_sprite.png\";\n    this.explodeImage.startPosX = 0;\n    this.explodeImage.startPosY = 0;\n    this.explodeImage.count = 0;\n\n    // this.ctx3.clearRect(this.blossomX / 8.8, this.blossomY / 5.7, 30, 70);\n    this.explodeImage.onload = () => {\n      this.animate(this.ctx3);\n\n\n      };\n\n    }\n  // animateCallback(ctx3) {\n  //\n  //   // return () => {\n  //     // ctx3.clearRect(0, 0, 128, 128);\n  //\n  //     this.ctx3.drawImage(this.explodeImage, this.explodeImage.startPosX, this.explodeImage.startPosY, 128, 128, 0, 0, 128, 128);\n  //\n  //     this.explodeImage.startPosX += 128;\n  //\n  //     if (this.explodeImage.startPosX >= 1024 && this.explodeImage.count <= 4) {\n  //       this.explodeImage.startPosX = 0;\n  //       this.explodeImage.startPosY += 128;\n  //       this.explodeImage.count += 1;\n  //     } else if (this.explodeImage.count > 4) {\n  //       window.cancelAnimationFrame(request);\n  //     }\n  //     // window.requestAnimationFrame(this.animateCallback(ctx3).bind(this));\n  //   // };\n  //   let request = window.requestAnimationFrame(this.animateCallback.bind(this));\n  // }\n  //\n  // animate(ctx3) {\n  //\n  //   this.animateCallback(ctx3);\n  //   // .bind(this);\n  //   // window.requestAnimationFrame(this.animateCallback(ctx3).bind(this));\n  // }\n  //\n  // drawSprite(ctx3) {\n  //\n  //   this.explodeImage = new Image();\n  //   this.explodeImage.src = \"./assets/images/explosion_sprite.png\";\n  //   this.explodeImage.startPosX = 0;\n  //   this.explodeImage.startPosY = 0;\n  //   this.explodeImage.count = 0;\n  //\n  //   // this.explodeImage.onload = () => {\n  //     // ctx3.clearRect(0, 0, 128, 128);\n  //     // this.animate(ctx3);\n  //   // for (var i = 0; i < 40; i++) {\n  //     ctx3.drawImage(this.explodeImage, this.explodeImage.startPosX, this.explodeImage.startPosY, 128, 128, 0, 0, 128, 128);\n  //\n  //     this.explodeImage.startPosX += 128;\n  //     ctx3.clearRect(0,0, 128, 128);\n  //\n  //     if (this.explodeImage.startPosX >= 1024 & this.explodeImage.count <= 4) {\n  //       this.explodeImage.startPosX = 0;\n  //       this.explodeImage.startPosY += 128;\n  //       this.explodeImage.count += 1;\n  //     }\n  //\n  //     // setInterval(this.drawSprite, 20);\n  //\n  //   // }\n  //   // this.drawSprite(ctx3);\n  //\n  //     // };\n  // }\n\n\n}\n\nmodule.exports = Explosion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/explosion.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}