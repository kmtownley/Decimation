{"version":3,"sources":["webpack:///webpack/bootstrap 72809d155760507b8506","webpack:///./lib/decimation.js","webpack:///./lib/game.js","webpack:///./lib/blossom.js","webpack:///./lib/background.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;;AAEA;;AAEA,CAAC;;;;;;;AChDD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;;;;;ACxHA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;;;AAIA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AC3MA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 72809d155760507b8506","const Blossom = require(\"./blossom\");\n// import Blossom from \"./blossom\";\n\nconst Game = require('./game');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let canvasEl = document.getElementById(\"myCanvas\");\n  canvasEl.width = 1000;\n  canvasEl.height = 500;\n\n  let ctx = canvasEl.getContext(\"2d\");\n  ctx.fillStyle = \"#ffffff\";\n  ctx.fillRect(0, 0, canvasEl.width, canvasEl.height);\n\n  let backgroundEl = document.getElementById(\"canvasBackground\");\n  backgroundEl.height = 100;\n  backgroundEl.width = 300;\n\n  let ctx2 = canvasEl.getContext(\"2d\");\n\n\n\n  // canvasEl.addEventListener('click', () => {\n  //  console.log('canvas click');\n  // });\n  // let canvasPosition = {\n  //   x: canvasEl.offset().left,\n  //   y: canvasEl.offset().top\n  // };\n  //\n  // canvasEl.on('click', function(e) {\n  //\n  //   // use pageX and pageY to get the mouse position\n  //   // relative to the browser window\n  //\n  //   var mouse = {\n  //       x: e.pageX - canvasPosition.x,\n  //       y: e.pageY - canvasPosition.y\n  //   };\n  // });\n\n  const game = new Game();\n\n  game.beginBackground(ctx2);\n  game.start(ctx);\n\n  window.Blossom = Blossom;\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/decimation.js\n// module id = 0\n// module chunks = 0","const Blossom = require(\"./blossom\");\nconst Background = require(\"./background\");\n\nclass Game {\n  constructor() {\n    this.blossoms = [];\n    this.valid = false;\n    this.selection = null;\n    this.draw = this.draw.bind(this);\n    this.renderBackground = this. renderBackground.bind(this);\n    this.createBlossoms = this.createBlossoms.bind(this);\n    this.xDim = 0;\n    this.yDim = 0;\n    this.drawnBlossoms = [];\n\n    for (let i = 0; i <= Game.NUM_BLOSSOMS; ++i) {\n      this.blossoms.push(\n        this.createBlossoms()\n      );\n    }\n  }\n\n  beginBackground(ctx2) {\n    this.renderBackground(ctx2);\n  }\n\n  start(ctx) {\n    // this.renderBackground(ctx);\n    this.draw(ctx);\n    this.collisionHandler();\n  }\n\n  createBlossoms() {\n    return Blossom.randomBlossom(0, Game.DIM_Y, Game.NUM_BLOSSOMS);\n  }\n\n  drawBlossoms(ctx) {\n    let i = 0;\n\n    return () => {\n      if (i == 40) clearInterval(this.interval);\n      this.blossoms[i].draw(ctx);\n      debugger\n      i += 1;\n    };\n  }\n\n  draw(ctx) {\n  debugger\n  let dx = 0.5;\n  let dy = 0.5;\n  let  b = new Blossom(0, 0).draw(ctx, 0, 0);\n\n   ctx.drawImage(b, this.xDim, this.yDim, 125, 125);\n   const animateCallback = () => {\n   if (this.xDim < 500  && this.yDim < 500) {\n     this.xDim += dx;\n     this.yDim += dy;\n     this.draw(ctx);\n     } else {\n      this.xDim = 1;\n      this.yDim = 1;\n      this.draw(ctx);\n     // window.requestAnimationFrame(animateCallback);\n     }\n   };\n   window.requestAnimationFrame(animateCallback);\n  }\n\n  renderBackground() {\n\n    this.interval = setInterval(this.drawBlossoms(ctx).bind(this), 3000);\n  }\n\n\n  renderBackground(ctx2) {\n    new Background(0, 500).scrollImage(ctx2);\n  }\n\n  findVisibleBlossoms() {\n    debugger\n    this.blossoms.forEach(blossom => {\n      if (blossom.x > 0) {\n        this.visibleBlossoms.push(blossom);\n      }\n    });\n    return this.visibleBlossoms;\n  }\n\n  collisionHandler(blossom, nextBlossom) {\n    debugger\n    this.findVisibleBlossoms();\n      if (this.visibleBlossoms !== undefined) {\n      this.visibleBlossoms.forEach((blossom, idx) => {\n        let nextBlossom = this.vissibleBlossoms[idx + 1];\n        if (blossom.x > nextBlossom.x) {\n          blossom.x -= 10;\n        }\n      });\n    }\n  }\n\n\n\n//   collisionDetection() {\n//     if (rect1.x < rect2.x + rect2.width &&\n//    rect1.x + rect1.width > rect2.x &&\n//    rect1.y < rect2.y + rect2.height &&\n//    rect1.height + rect1.y > rect2.y) {\n//     // collision detected!\n// }\n//   }\n\n}\n\nGame.DIM_X = 1000;\nGame.DIM_Y = 500;\nGame.NUM_BLOSSOMS = 20;\n\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","BLOSSOM = new Image();\nBLOSSOM.src = \"./assets/images/whole_blossom.png\";\n\n\nclass Blossom {\n  constructor(x, y) {\n    this.x = x;\n    this.y = Math.random() * 400 + 6;\n    this.drawnBlossoms = [];\n    this.visibleBlossoms = [];\n    this.height = 125;\n    this.width = 125;\n\n    // this.isOutOfBounds = this.isOutOfBounds.bind(this)\n  }\n  //\n  // model() {\n  //   this.rot += 0.1 * this.direc;\n  //   this.x += this.xVec;\n  //   this.yVec += this.gravity;\n  //   this.y += this.yVec;\n  //   this.bounceIf();\n  // }\n  //\n  // bounceIf() {\n  //   if (this.y >= this.bottom || this.y <= this.top) {\n  //     this.y = this.bottom;\n  //     this.yVec = -1 * this.yVec;\n  //   }\n  //\n  // }\n\n\n\n\n  draw(ctx) {\n    let increments = [1, 2];\n    let dx = 1.1;\n    let dy = 0.9;\n    this.blossom = new Image();\n    this.blossom.src = './assets/images/whole_blossom.png';\n    this.blossom.onload = function() {\n      // ctx.drawImage(blossom, 10, 10, 125, 125);\n       ctx.fillRect(0, 0, 1000, 500);\n    };\n    // return this.blossom;\n    ctx.drawImage(this.blossom, this.x, this.y, 125, 125 );\n\n    const animateCallback = () => {\n    if (this.x <= Math.random() * 320 + 3  && this.y < Math.random() * 600 + 4) {\n      this.x += dx;\n      this.y += dy;\n      // if (this.collisionDetected()) {\n      //   this.x -= 50;\n      // }\n      this.draw(ctx);\n    } else if (this.x < 450) {\n       this.x += dx;\n       this.y -= dy;\n       // if (this.collisionDetected()) {\n       //   this.x -= 50;\n       // }\n       this.draw(ctx);\n     } else if (this.x < 730) {\n       this.x += dx;\n       this.y += dy;\n       // if (this.collisionDetected()) {\n       //   this.x -= 50;\n       // }\n       this.draw(ctx);\n     } else if (this.x <= 999) {\n       this.x += dx;\n       this.y -= dy;\n       this.draw(ctx);\n     } else {\n       return null;\n     }\n    };\n    window.requestAnimationFrame(animateCallback);\n\n   }\n\n   // findVisibleBlossoms() {\n   //   debugger\n   //\n   //   this.drawnBlossoms.forEach(blossom => {\n   //     if (blossom.x > 0) {\n   //       this.visibleBlossoms.push(blossom);\n   //     }\n   //   });\n   //   return this.visibleBlossoms;\n   // }\n\n   collisionDetected(blossom, nextBlossom) {\n     debugger\n     this.findVisibleBlossoms();\n       if (this.visibleBlossoms !== undefined) {\n       this.visibleBlossoms.forEach((blossom, idx) => {\n         let nextBlossom = this.vissibleBlossoms[idx + 1];\n         if (blossom.x > nextBlossom.x) {\n           return true;\n         }\n\n       });\n     }\n\n     // return !(\n     // (this.x + this.height) < otherBlossom.y ||\n     //    (this.y > (otherBlossom.y + otherBlossom.height)) ||\n     //   ((this.x + this.width) < otherBlossom.x) ||\n     //   (this.x > (otherBlosom.x + otherBlossom.width))\n     // );\n   }\n\n   moveRandom(maxY) {\n     let dy = (Math.random() * 2) - 1;\n     this.y = Math.abs((this.y + (dy * 25) * 0.1) % 300);\n   }\n\n  // draw(ctx) {\n  //\n  //   let dx = 1.1;\n  //   // let dy;\n  //   if (this.dy === null) {\n  //     this.dy = (Math.random() * 4) - 1;\n  //   }\n  //\n  //   this.blossom = new Image();\n  //   this.blossom.src = './assets/images/whole_blossom.png';\n  //   this.blossom.onload = function() {\n  //     // ctx.drawImage(blossom, 10, 10, 125, 125);\n  //      ctx.fillRect(0, 0, 1000, 500);\n  //   };\n  //   // return this.blossom;\n  //   ctx.drawImage(this.blossom, this.x, this.y, 125, 125 );\n  //   const animateCallback = () => {\n  //     for (let i = 1; i < 20; i++) {\n  //       if (i === 1 && (this.y <= 150 && this.y > 0)) {\n  //         this.x += dx;\n  //         this.y += this.dy;\n  //         this.draw(ctx);\n  //       } else if ( i === 1 && (this.y >150 && this.y < 300)) {\n  //         this.x +=dx;\n  //         this.y -= this.dy;\n  //         this.draw(ctx);\n  //       } else if (this.isOutOfBounds(this.y) && this.x < 1000) {\n  //\n  //         this.reverseDy(this.dy);\n  //         this.x += dx;\n  //         this.y += this.dy;\n  //         this.draw(ctx);\n  //       } else if (this.x < 1000) {\n  //\n  //         this.x += dx;\n  //         this.y += this.dy;\n  //         this.draw(ctx);\n  //       } else {\n  //         this.x = 1;\n  //         this.y = Math.random() * 70 + 10;\n  //         this.draw(ctx);\n  //       }\n  //\n  //        }\n  //     };\n  //     window.requestAnimationFrame(animateCallback);\n  //   }\n\n\n   // reverseDy(dy) {\n   //   return (\n   //   this.dy = dy * -1\n   //   );\n   // }\n   //\n   // isOutOfBounds(y) {\n   //   if (y > 300 || y < 1 ) {\n   //     return true;\n   //   } else {\n   //     return false;\n   //   }\n   // }\n\n   // moveUp() {\n   //   if {this.starty < }\n   // }\n\n\n\n}\n\nBlossom.randomBlossom = (maxX, maxY, numBlossoms) => {\n\n  let blossom = new Image();\n  blossom.src = \"./assets/images/whole_blossom.png\";\n\n  return new Blossom(\n    maxX * Math.random(),\n    maxY * Math.random(),\n    numBlossoms += 1\n  );\n};\n\n\nmodule.exports = Blossom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blossom.js\n// module id = 2\n// module chunks = 0","class Background {\n  constructor() {\n  }\n\n  scrollImage(ctx2) {\n    this.img = new Image();\n    this.img.src = './assets/images/footer_image_tower.png';\n\n    this.img.onload = () => {\n    let x = 0;\n    let width = this.img.naturalWidth;\n    let min = 0 - width;\n    let count = 1;\n\n      const loop = () => {\n        ctx2.fillRect(0, 0, 1000, 500);\n        ctx2.drawImage(this.img, x, 370);\n        ctx2.drawImage(this.img, x + width, 370);\n        ctx2.drawImage(this.img, x + width * 2, 370);\n        ctx2.drawImage(this.img, x + width * 3, 370);\n        x -= count;\n        if (x < min) {\n          x = 0;\n        }\n      };\n    setInterval(loop, 9);\n    };\n  }\n}\n\nmodule.exports = Background;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/background.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}