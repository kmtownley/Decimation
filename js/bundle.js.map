{"version":3,"sources":["webpack:///webpack/bootstrap 5734bc268c9ed7b95e70","webpack:///./lib/words.js","webpack:///./lib/blossom.js","webpack:///./lib/explosion.js","webpack:///./lib/decimation.js","webpack:///./lib/game.js","webpack:///./lib/background.js","webpack:///./lib/player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC5EA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAiD,UAAU;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzJA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;AAMA;;AAEA;;;;;;;AC3FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA,GAAG;;;;AAIH;AACA,qBAAqB;;;;AAIrB,CAAC;;;;;;;ACrED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,uDAAuD,8CAA8C,oBAAoB;AACzH,+CAA+C,mBAAmB;AAClE;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;;;;;;ACnQA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;;AAGA","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5734bc268c9ed7b95e70","WORDS = {\n  \"One Tenth\": 0.1,\n  \"Two Tenths\": 0.2,\n  \"Three Tenths\": 0.3,\n  \"Four Tenths\": 0.4,\n  \"Five Tenths\": 0.5,\n  \"Six Tenths\": 0.6,\n  \"Eight Tenths\": 0.8,\n  \"Nine Tenths\": 0.9,\n  \"One Hundredth\": 0.01,\n  \"Two Hundredths\": 0.02,\n  \"Three hundredths\": 0.03,\n  \"Four hundredths\": 0.04,\n  \"Five hundredths\": 0.05,\n  \"Six hundredths\": 0.06,\n  \"Eleven Hundredths\": 0.11,\n  \"Sixteen Hundredths\": 0.16,\n  \"Seventeen Hundredths\": 0.017,\n  \"One an One Tenth\": 1.1,\n  \"Three and Four Tenths\": 3.4,\n  \"Zero and Three Hundredths\": 0.03,\n  \"One Thousandth\": 0.001,\n  \"Eleven Thousandths\": 0.011,\n  \"Forty-One Hundreths\": 0.41,\n  \"One and Fourteen Hundredths\": 1.14,\n  \"Eighty-One Thousandths\": 0.81,\n  \"Eighteen Hundredths\": 0.18,\n  \"Thirteen Thousandths\": 0.013,\n  \"Eighty-Five Thousandths\": 0.085,\n  \"Ninety-Nine Thousandths\": 0.099,\n  \"Three Hundred and Fifteen Thousandths\": 0.315\n};\n\nlet DISPLAYED_WORD = null;\n\nclass Word {\n  constructor() {\n    this.wordValue = this.createWord();\n    this.decimalValue = this.createDecimal(this.wordValue);\n    this.match = null;\n    this.display = false;\n  }\n\n  createWord() {\n    let keys = Object.keys(WORDS);\n    let length = keys.length;\n    let rnd = Math.floor(Math.random()*length);\n    let key = keys[rnd];\n    return key;\n  }\n\n  createDecimal(key) {\n    return WORDS[key];\n  }\n\n  renderWordChoice(wordArray) {\n    let displayed;\n\n\n    if (wordArray.length === 0) {\n        document.querySelector(\".words\").innerHTML = \"Let's begin\";\n    } else if (wordArray === \"Decimated\") {\n      document.querySelector(\".words\").innerHTML = \"Decimated\";\n    }\n    else {\n      let word = wordArray[Math.floor(Math.random() * wordArray.length)];\n        document.querySelector(\".words\").innerHTML = word;\n        DISPLAYED_WORD = word;\n    }\n  }\n\n  isMatch(wordVal) {\n    return (wordVal === DISPLAYED_WORD ? true : false);\n  }\n}\n\nmodule.exports = Word;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/words.js\n// module id = 0\n// module chunks = 0","// BLOSSOM = new Image();\n// BLOSSOM.src = \"./assets/images/whole_blossom.png\";\nconst Word = require(\"./words\");\nconst Explosion = require(\"./explosion\");\n\n\nclass Blossom {\n  constructor(x, y, numBlosssoms, ctx3, ctx) {\n    this.x = x;\n    this.y = Math.random() * 400 + 6;\n    this.drawnBlossoms = [];\n    this.visibleBlossoms = [];\n    this.ctx3 = ctx3;\n    this.ctx = ctx;\n    this.blossomExploded = false;\n    this.renderBlossom = this.renderBlossom.bind(this);\n    this.draw = this.draw.bind(this);\n    this.value = new Word();\n    this.decimalValue = this.value.decimalValue;\n    this.wordValue = this.value.wordValue;\n    this.cancelGame = false;\n    this.blossom = new Image();\n    this.blossom.src = './assets/images/whole_blossom.png';\n    this.explosion = new Explosion(this.ctx3, this.x, this.y);\n    this.explosion.src = \"./assets/images/explosion_sprite.png\";\n    this.alreadyExploded = false;\n\n\n  }\n\n  // pauseGame(ctx) {\n  //\n  //   this.cancelGame = true;\n  //   Blossom.prototype.draw;\n  // }\n\n  draw(ctx) {\n\n    let increments = [1, 2];\n    let dx = 1.1;\n    let dy = 0.8;\n\n    // if (this.blossomExploded === true) {\n    //\n    //   console.log(\"got in\")\n    //   this.blossom = ctx.createImageData(128, 128);\n    //     for (let i = this.blossom.data.length; --i >= 0; )\n    //       this.blossom.data[i] = 0;\n    //       ctx.putImageData(this.blossom, this.x, this.y);\n    //   }\n      if(this.blossom){\n    ctx.drawImage(this.blossom, this.x, this.y, 125, 125 );\n    ctx.font=\"24px Varela Round\";\n    ctx.fillText(this.decimalValue, this.x + 37, this.y + 73);\n\n    //\n    // const animateCallback = () => {\n      if (this.explodedBlossom !== true) {\n\n        if (this.x <= Math.random() * 320 + 3  && this.y < Math.random() * 600 + 4) {\n          this.x += dx;\n          this.y += dy;\n          // this.renderBlossom(ctx);\n        } else if (this.x < 400) {\n           this.x += dx;\n           this.y -= dy;\n           // this.renderBlossom(ctx);\n         } else if (this.x < 730) {\n           this.x += dx;\n           this.y += dy;\n           // this.renderBlossom(ctx);\n         } else if (this.x <= 999) {\n           this.x += dx;\n           this.y -= dy;\n           // this.renderBlossom(ctx);\n         } else {\n\n           return null;\n         }\n       // }\n      }\n    }\n    // if (!this.cancelGame) {\n    //   window.requestAnimationFrame(animateCallback);\n    // }\n   }\n\n   renderBlossom() {\n\n     if (this.blossomExploded === true) {\n       this.blossom = this.ctx.createImageData(128, 128);\n         for (let i = this.blossom.data.length; --i >= 0; )\n           this.blossom.data[i] = 0;\n           // this.ctx.putImageData(this.blossom, this.x, this.y);\n       }\n   }\n   // findVisibleBlossoms() {\n   //   this.drawnBlossoms.forEach(blossom => {\n   //     if (blossom.x > 0) {\n   //       this.visibleBlossoms.push(blossom);\n   //     }\n   //   });\n   //   return this.visibleBlossoms;\n   // }\n\n\n   collisionDetected(blossom, nextBlossom) {\n     this.findVisibleBlossoms();\n       if (this.visibleBlossoms !== undefined) {\n       this.visibleBlossoms.forEach((blossom, idx) => {\n         let nextBlossom = this.vissibleBlossoms[idx + 1];\n         if (blossom.x > nextBlossom.x) {\n           return true;\n         }\n       });\n     }\n   }\n\n   moveRandom(maxY) {\n     let dy = (Math.random() * 2) - 1;\n     this.y = Math.abs((this.y + (dy * 25) * 0.1) % 300);\n   }\n\n   // explodeBlossom() {\n   //\n   //   // let explosion = new Explosion(this.ctx3);\n   //   this.explosion.explodeBlossom(this.x, this.y, 30, 70);\n   //   setTimeout( () => this.explosion.exploded = false, 2000);\n   // }\n\n   findVisibleBlossoms() {\n    if (this.x > 0 && this.x < 1000) {\n      this.visibleBlossoms.push(this);\n    }\n\n  }\n\n}\n\nBlossom.randomBlossom = (maxX, maxY, numBlossoms, ctx3, ctx) => {\n\n  let blossom = new Image();\n  blossom.src = \"./assets/images/whole_blossom.png\";\n  return new Blossom(\n    maxX * Math.random(),\n    maxY * Math.random(),\n    numBlossoms += 1,\n    ctx3,\n    ctx\n  );\n};\n\n\nmodule.exports = Blossom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/blossom.js\n// module id = 1\n// module chunks = 0","class Explosion {\n  constructor(ctx3, displayPosX, displayPosY) {\n\n    this.explodeBlossom = this.explodeBlossom.bind(this);\n\n    this.ctx3 = ctx3;\n    this.start = Date.now();\n    this.frame = 0;\n    this.diplayPosX = displayPosX || null;\n    this.displayPoxY = displayPosY || null;\n    // this.blossomX = x;\n    // this.blossomY = y;\n    this.exploded = true;\n    this.startPosX = 0;\n    this.startPosY = 0;\n    this.startCount = 0;\n    this.explodeImage = new Image();\n    this.explodeImage.src = \"./assets/images/explosion_sprite.png\";\n  }\n\n\n  explodeBlossom(ctx3, blossomX, blossomY, length, width) {\n    // if (this.startPosX >= 1040 && this.startPosy >= 640) {\n    //   this.startPosX = 0;\n    //   thi.startPosY = 0;\n    //\n    // }\n    // if (this.displayPosX === null)\n    // this..startPosX = 0;\n    // this.explodeImage.startPosY = 0;\n\n    // return () => {\n      // this.ctx3.clearRect(this.blossomX, this.blossomY, 30, 70);\n      // ctx3.drawImage(this.explodeImage, this.explodeImage.startPos, 128, 128, 128, 0, 0, 128, 128);\n      //\n      // this.explodeImage.startPos += 128;\n      // this.ctx3.clearRect(0, 0, 1000, 500);\n      // window.requestAnimationFrame(this.animateCallback(ctx3).bind(this));\n        if (this.exploded === true) {\n          // this.ctx3.rect(20,20,150,100);\n          // this.ctx3.stroke();\n          // this.ctx3.lineWidth=\"4\";\n          // this.ctx3.strokeStyle=\"green\";\n          // this.ctx3.clearRect(0,0, 1000, 500);\n          ctx3.drawImage(this.explodeImage, this.startPosX, this.startPosY, 128, 128, blossomX / 9.2, blossomY/ 5.9, length, width);\n          // this.ctx3.fillStyle = 'green';\n          // this.ctx3.fillRect(0, 0, 128, 128)\n\n          this.startPosX += 128;\n\n          if (this.startPosX >= 1024 & this.startCount <= 4) {\n            \n            this.startPosX = 0;\n            this.startPosY += 128;\n            this.startCount += 1;\n\n\n          }\n        }\n\n    }\n      // if (Date.now() - this.start < 8000) {\n        // this.ctx3.clearRect(this.explodeImage.startPosX, this.explodeImage.startPosY, 0, 1000, 500);\n        // window.requestAnimationFrame(this.animateCallback(this.ctx3).bind(this));\n      // }\n    // };\n  // animate(ctx3) {\n  //   window.requestAnimationFrame(this.animateCallback(this.ctx3).bind(this));\n\n  // drawSprite() {\n  //   this.explodeImage = new Image();\n  //   this.explodeImage.src = \"./assets/images/explosion_sprite.png\";\n  //   this.explodeImage.startPosX = 0;\n  //   this.explodeImage.startPosY = 0;\n  //   this.explodeImage.count = 0;\n\n    // this.ctx3.clearRect(this.blossomX / 8.8, this.blossomY / 5.7, 30, 70);\n    // this.explodeImage.onload = () => {\n    //   this.animate(this.ctx3);\n\n\n    //   };\n    //\n    // }\n\n\n\n\n\n}\n\nmodule.exports = Explosion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/explosion.js\n// module id = 2\n// module chunks = 0","const Blossom = require(\"./blossom\");\nconst Game = require('./game');\nconst Words = require('./words');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let canvasEl = document.getElementById(\"myCanvas\");\n  canvasEl.width = 1000;\n  canvasEl.height = 500;\n  canvasLeft = canvasEl.offsetLeft;\n  canvasTop = canvasEl.offsetTop;\n\n  let ctx = canvasEl.getContext(\"2d\");\n  ctx.fillStyle = \"#ffffff\";\n  ctx.fillRect(0, 0, canvasEl.width, canvasEl.height);\n\n  let canvasWords = document.getElementById(\"canvasWords\");\n  canvasWords.width = 80;\n  canvasWords.height = 80;\n  let ctxWords = document.getElementById(\"canvasWords\");\n\n  let clickyEl = document.querySelector(\".clicky\");\n  clickyEl.addEventListener(\"click\", (e) => {\n    let x = e.pageX - canvasLeft;\n    let y = e.pageY - canvasTop;\n    game.receiveMouseXY(x, y);\n  });\n\n  let modal = document.getElementById('myModal');\n  let btn = document.getElementById(\"myBtn\");\n  let span = document.getElementsByClassName(\"close\")[0];\n  btn.onclick = function() {\n      modal.style.display = \"block\";\n  };\n\n  span.onclick = function() {\n      modal.style.display = \"none\";\n  };\n  window.onclick = function(event) {\n      if (event.target == modal) {\n          modal.style.display = \"none\";\n      }\n  };\n\n  let backgroundEl = document.getElementById(\"canvasBackground\");\n  backgroundEl.height = 100;\n  backgroundEl.width = 300;\n\n  let ctx2 = canvasEl.getContext(\"2d\");\n\n  let explosionEl = document.getElementById(\"canvasExplosion\");\n  explosionEl.height = 128;\n  explosionEl.width = 128;\n\n  let ctx3 = explosionEl.getContext(\"2d\");\n\n  const game = new Game(ctx, ctx2, ctx3, ctxWords);\n\n\n  document.addEventListener(\"visibilitychange\", () => {\n    game.gameOver();\n  });\n\n\n\n  game.beginBackground(ctx2);\n  game.controlGame();   /// start the loop (or use rAF here too)\n\n\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/decimation.js\n// module id = 3\n// module chunks = 0","const Blossom = require(\"./blossom\");\nconst Background = require(\"./background\");\nconst Word = require(\"./words\");\nconst Player = require(\"./player\");\nconst Explosion = require(\"./explosion\");\n\nclass Game {\n  constructor(ctx, ctx2, ctx3, ctxWords) {\n    this.blossoms = [];\n    this.visibleBlossoms = [];\n    this.start = false;\n    this.startAnimation = this.startAnimation.bind(this);\n    this.createBlossoms = this.createBlossoms.bind(this);\n    this.findVisibleWords = this.findVisibleWords.bind(this);\n    this.drawBlossoms = this.drawBlossoms.bind(this);\n    this.renderExplosion = this.renderExplosion.bind(this);\n    this.explodeBlossoms = this.explodeBlossoms.bind(this);\n    this.xDim = 0;\n    this.yDim = 0;\n    this.ctx3 = ctx3;\n    this.ctx2 = ctx2;\n    this.ctx = ctx;\n    this.visibleWords = [];\n    this.player = new Player();\n    this.drawnBlossoms = 0;\n    this.now;\n    this.then = Date.now();\n    this.delta;\n    this.blossomInterval = 3000;\n    this.explodeImageCount;\n    this.exploding = false;\n    this.round = 0;\n    this.explosion = new Explosion(this.ctx3);\n    this.initialExplode = true;\n    this.alreadyStarted = false;\n    this.startCount = 0;\n    this.explodingBlossoms = 0;\n    this.isPaused = false;\n    this.blossomStack;\n    this.blossomIdx = 0 ;\n    this.pausedGame = document.getElementById(\"pausedGame\");\n    this.gameOver = this.gameOver.bind(this);\n    this.gameStopped = false;\n    this.audio = document.getElementById(\"player\");\n    this.mute = document.getElementById(\"mute\");\n    this.explosionSound = document.getElementById(\"explosion\");\n    this.errorSound = document.getElementById(\"wrong\");\n  }\n\n  loadBlossoms() {\n    if (this.start === true) {\n      for (let i = 0; i <= Game.NUM_BLOSSOMS; ++i) {\n        this.blossoms.push(\n          this.createBlossoms()\n        );\n      }\n    }\n  }\n\n  beginBackground() {\n    this.renderBackground(this.ctx2);\n  }\n\n  startAnimation() {\n    if (!this.isPaused) {\n      this.ctx3.clearRect(0, 0, 128, 128);\n      if (this.initialExplode === true) {\n        this.explosionSound.play();\n        this.renderExplosion(this.ctx3, 0, -10, 120, 130);\n      }\n      if (this.exploding === true) {\n        this.blossoms.forEach((blossom, idx) => {\n          if (blossom.blossomExploded === true) {\n          this.renderExplosion(this.ctx3, blossom.x, blossom.y, 30, 70);\n          setTimeout(() => blossom.blossomExploded = false, 800);\n          }\n        });\n      }\n      setTimeout(() => this.initialExplode = false, 1500);\n      this.explodeBlossoms();\n\n      let now = Date.now();\n      this.delta = now - this.then;\n      if (this.visibleBlossoms && this.start === true) {\n        this.drawVisibleBlossoms(this.ctx);\n      }\n\n      if (this.delta > this.blossomInterval) {\n        Word.prototype.renderWordChoice(this.visibleWords);\n        this.then = now - (this.delta % this.blossomInterval);\n        // this.drawnBlossoms += 1;\n        if (this.drawnBlossoms === 50) clearInterval(this.interval);\n        if (this.drawnBlossoms === 50) {\n          this.gameOver();\n        }\n      }\n      this.findVisibleWords();\n      requestAnimationFrame(this.startAnimation);\n    }\n  }\n\n\n  controlGame() {\n    let startButton = document.getElementById(\"start\");\n    startButton.addEventListener(\"click\", () => {\n      this.toggleStart();}, false);\n    let stopButton = document.getElementById(\"stop\").addEventListener(\"click\",   this.gameOver, false);\n    let pauseButton = document.getElementById(\"pause\"); pauseButton.addEventListener(\"click\", () => {this.togglePause();}, false);\n    this.mute.addEventListener(\"click\", () => {this.toggleMute();});\n  }\n\n  toggleMute() {\n    if (this.audio.paused) {\n      this.audio.volume = 0.4\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n  toggleStart() {\n    if (!this.start) {\n      this.start = true;\n      this.isPaused = false;\n      this.willExplode = true;\n      this.loadBlossoms();\n      this.blossomStack = setInterval(() => {\n      this.visibleBlossoms.push(this.blossoms.slice(this.blossomIdx, this.blossomIdx + 1)[0]);\n      this.blossomIdx += 1;\n\n    }, 3000);\n      setInterval(() => this.findVisibleWords, 3000);\n    }\n      this.startAnimation();\n  }\n\n  togglePause() {\n    this.isPaused = !this.isPaused;\n    if (this.isPaused && !this.gameStopped) {\n      clearInterval(this.blossomStack);\n      this.start = false;\n      this.pausedGame.style.display = \"inline-block\";\n    } else if (!this.gameStopped){\n      this.toggleStart();\n      this.pausedGame.style.display = \"none\";\n    }\n  }\n\n  gameOver() {\n    this.pausedGame.style.display = \"none\";\n    // let wordContainer = document.querySelector(\"words\").innerHTML = \"Well Done\";\n    // wordContainer.style.display = \"inline-block\";\n    let gameOverMessage = document.getElementById(\"gameOver\");\n    this.gameStopped = true;\n    gameOverMessage.style.display = \"inline-block\";\n  }\n\n  toggleGameScreen() {\n    if (this.stoppedGame === true) {\n      let gameOverMessage = document.getElementById(\"gameOver\");\n      gameOverMessage.style.display = \"none\";\n    }\n  }\n\n  drawVisibleBlossoms(ctx) {\n    let idxDeleted;\n    this.visibleBlossoms.forEach((blossom, idx) => {\n\n      if (!blossom.blossomExploded) {\n      blossom.draw(ctx);\n      if (blossom.x > 980) {\n        idxDeleted = idx;\n      }\n      }\n    });\n  }\n\n  createBlossoms() {\n    return Blossom.randomBlossom(0, Game.DIM_Y, Game.NUM_BLOSSOMS, this.ctx3, this.ctx);\n  }\n\n  drawBlossoms(ctx) {\n    this.drawnBlossoms += 1;\n  }\n\n  explodeBlossoms() {\n    this.visibleBlossoms.forEach((blossom, idx) => {\n      if (blossom.blossomExploded === true) {\n        if (idx !== -1) {\n          this.visibleBlossoms.splice(idx, 1);\n        }\n      }\n    });\n  }\n\n  renderBackground(ctx2) {\n    if (!this.isPaused) {\n    new Background(0, 500).scrollImage(ctx2);\n    }\n  }\n\n  findVisibleWords() {\n    this.blossoms.forEach(blossom => {\n      if (blossom.x > 0 && blossom.x < 980) {\n      }\n    });\n    this.visibleBlossoms.forEach(blossom => {\n      if (!this.visibleWords.includes(blossom.wordValue)) {\n        if (this.visibleWords.length > 2) {\n          this.visibleWords.splice(0, 1);\n        }\n        this.visibleWords.push(blossom.wordValue);\n      }\n    });\n  }\n\n  renderExplosion(ctx3, xPos, yPos, sizeX, sizeY) {\n    this.blossoms.forEach(blossom => {\n       blossom.explosion.explodeBlossom(ctx3, xPos, yPos, sizeX, sizeY);\n    });\n  }\n\n  receiveMouseXY(x, y) {\n    if (this.blossoms !== undefined) {\n      this.visibleBlossoms.forEach(blossom => {\n        if ((x < blossom.x + 100 && x > blossom.x) && (y > blossom.y + 100 && y < blossom.y + 208 ) && blossom.x !== 0) {\n\n          if (Word.prototype.isMatch(blossom.wordValue)) {\n            this.correctChoices += 1;\n            this.player.addGems();\n            Word.prototype.renderWordChoice(\"Decimated\");\n            blossom.blossomExploded = true;\n            this.explodingBlossoms += 1;\n            blossom.explosion.startPosX = 0;\n            blossom.explosion.startPosY = 0;\n            blossom.explosion.startCount = 0;\n            this.exploding = true;\n            this.explosionSound.play();\n            setTimeout(() => {\n              this.explodingBlossoms -= 1;\n              if (this.explodingBlossoms === 0) {\n                this.exploding = false;\n              }\n            }, 1200);\n\n          } else {\n            this.player.removeGems();\n            this.errorSound.play();\n          }\n        }\n      });\n    }\n  }\n}\n\n\nGame.DIM_X = 1000;\nGame.DIM_Y = 500;\nGame.NUM_BLOSSOMS = 50;\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 4\n// module chunks = 0","class Background {\n  constructor() {\n  }\n\n  scrollImage(ctx2) {\n    this.img = new Image();\n    this.img.src = './assets/images/footer_image_tower.png';\n\n    this.img.onload = () => {\n    let x = 0;\n    let width = this.img.naturalWidth;\n    let min = 0 - width;\n    let count = 1;\n\n      const loop = () => {\n        ctx2.fillRect(0, 0, 1000, 500);\n        ctx2.drawImage(this.img, x, 370);\n        ctx2.drawImage(this.img, x + width, 370);\n        ctx2.drawImage(this.img, x + width * 2, 370);\n        ctx2.drawImage(this.img, x + width * 3, 370);\n        x -= count;\n        if (x < min) {\n          x = 0;\n        }\n      };\n    setInterval(loop, 9);\n    };\n  }\n}\n\nmodule.exports = Background;\n\n\n\n\n// class Background {\n//   constructor(ctx2) {\n//     this.x = 0;\n//     this.count = 1;\n//     this.img = new Image();\n//     this.img.src = './assets/images/footer_image_tower.png';\n//     this.width = 405;\n//     this.min = 0 - this.width;\n//     this.ctx2 = ctx2;\n//   }\n//\n//   scrollImage() {\n//     // let x = 0;\n//     // let width = this.img.naturalWidth;\n//     // let min = 0 - width;\n//     // let count = 1;\n//     // this.img = new Image();\n//     // this.img.src = './assets/images/footer_image_tower.png';\n//\n//     // this.img.onload = () => {\n//\n//       // const loop = () => {\n//         this.ctx2.fillRect(0, 0, 1000, 500);\n//         this.ctx2.drawImage(this.img, this.x, 370);\n//         this.ctx2.drawImage(this.img, this.x + this.width, 370);\n//         this.ctx2.drawImage(this.img, this.x + this.width * 2, 370);\n//         this.ctx2.drawImage(this.img, this.x + this.width * 3, 370);\n//         this.x -= this.count;\n//         if (this.x < this.min) {\n//           this.x = 0;\n//         }\n//       // };\n//     // setInterval(loop, 9);\n//     // };\n//   }\n// }\n//\n// module.exports = Background;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/background.js\n// module id = 5\n// module chunks = 0","class Player {\n  constructor() {\n    this.gemScore = 0;\n\n    this.renderGems();\n  }\n\n  addGems() {\n    this.gemScore += 10;\n    this.renderGems();\n  }\n\n  removeGems() {\n    this.gemScore -= 10;\n    this.renderGems();\n  }\n\n  renderGems() {\n\n    document.getElementById(\"gemScore\").innerHTML = \"Score: \" +  this.gemScore;\n  }\n\n\n}\n\n\nmodule.exports = Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}